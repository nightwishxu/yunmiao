<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.item.dao.PlatformAuthenticationApplyMapper" >
    <resultMap id="BaseResultMap" type="com.item.dao.model.PlatformAuthenticationApply" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
        <result column="account" property="account" jdbcType="VARCHAR" />
        <result column="apply_time" property="applyTime" jdbcType="TIMESTAMP" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <result column="heritage_type" property="heritageType" jdbcType="VARCHAR" />
        <result column="real_name" property="realName" jdbcType="VARCHAR" />
        <result column="id_card" property="idCard" jdbcType="VARCHAR" />
        <result column="id_card_img" property="idCardImg" jdbcType="VARCHAR" />
        <result column="id_card_reverse" property="idCardReverse" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="create_name" property="createName" jdbcType="VARCHAR" />
        <result column="update_name" property="updateName" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id,user_id,nick_name,account,apply_time,address,heritage_type,real_name,id_card,id_card_img,id_card_reverse,status,create_time,create_name,update_name,update_time
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from t_platform_authentication_apply
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from t_platform_authentication_apply
        where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" >
        delete from t_platform_authentication_apply
        where id = #{id}
    </delete>

    <delete id="deleteByExample" >
        delete from t_platform_authentication_apply
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
        insert into t_platform_authentication_apply (user_id,nick_name,
        account,apply_time,address,
        heritage_type,real_name,id_card,
        id_card_img,id_card_reverse,status,
        create_time,create_name,update_name,
        update_time
        )
        values (#{userId,jdbcType=INTEGER},#{nickName,jdbcType=VARCHAR},
        #{account,jdbcType=VARCHAR},#{applyTime,jdbcType=TIMESTAMP},#{address,jdbcType=VARCHAR},
        #{heritageType,jdbcType=VARCHAR},#{realName,jdbcType=VARCHAR},#{idCard,jdbcType=VARCHAR},
        #{idCardImg,jdbcType=VARCHAR},#{idCardReverse,jdbcType=VARCHAR},#{status,jdbcType=INTEGER},
        #{createTime,jdbcType=TIMESTAMP},#{createName,jdbcType=VARCHAR},#{updateName,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" >
        insert into t_platform_authentication_apply
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="userId != null" >
                user_id,
            </if>
            <if test="nickName != null" >
                nick_name,
            </if>
            <if test="account != null" >
                account,
            </if>
            <if test="applyTime != null" >
                apply_time,
            </if>
            <if test="address != null" >
                address,
            </if>
            <if test="heritageType != null" >
                heritage_type,
            </if>
            <if test="realName != null" >
                real_name,
            </if>
            <if test="idCard != null" >
                id_card,
            </if>
            <if test="idCardImg != null" >
                id_card_img,
            </if>
            <if test="idCardReverse != null" >
                id_card_reverse,
            </if>
            <if test="status != null" >
                status,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="createName != null" >
                create_name,
            </if>
            <if test="updateName != null" >
                update_name,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="userId != null" >
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="nickName != null" >
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="account != null" >
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="applyTime != null" >
                #{applyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="address != null" >
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="heritageType != null" >
                #{heritageType,jdbcType=VARCHAR},
            </if>
            <if test="realName != null" >
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="idCard != null" >
                #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="idCardImg != null" >
                #{idCardImg,jdbcType=VARCHAR},
            </if>
            <if test="idCardReverse != null" >
                #{idCardReverse,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createName != null" >
                #{createName,jdbcType=VARCHAR},
            </if>
            <if test="updateName != null" >
                #{updateName,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <select id="countByExample" resultType="java.lang.Integer" >
        select count(*) from t_platform_authentication_apply
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" >
        update t_platform_authentication_apply
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null" >
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.nickName != null" >
                nick_name = #{record.nickName,jdbcType=VARCHAR},
            </if>
            <if test="record.account != null" >
                account = #{record.account,jdbcType=VARCHAR},
            </if>
            <if test="record.applyTime != null" >
                apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.address != null" >
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.heritageType != null" >
                heritage_type = #{record.heritageType,jdbcType=VARCHAR},
            </if>
            <if test="record.realName != null" >
                real_name = #{record.realName,jdbcType=VARCHAR},
            </if>
            <if test="record.idCard != null" >
                id_card = #{record.idCard,jdbcType=VARCHAR},
            </if>
            <if test="record.idCardImg != null" >
                id_card_img = #{record.idCardImg,jdbcType=VARCHAR},
            </if>
            <if test="record.idCardReverse != null" >
                id_card_reverse = #{record.idCardReverse,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null" >
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createName != null" >
                create_name = #{record.createName,jdbcType=VARCHAR},
            </if>
            <if test="record.updateName != null" >
                update_name = #{record.updateName,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null" >
                update_time = #{record.updateTime,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" >
        update t_platform_authentication_apply
        set id = #{id,jdbcType=INTEGER},
        user_id = #{userId,jdbcType=INTEGER},
        nick_name = #{nickName,jdbcType=VARCHAR},
        account = #{account,jdbcType=VARCHAR},
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
        address = #{address,jdbcType=VARCHAR},
        heritage_type = #{heritageType,jdbcType=VARCHAR},
        real_name = #{realName,jdbcType=VARCHAR},
        id_card = #{idCard,jdbcType=VARCHAR},
        id_card_img = #{idCardImg,jdbcType=VARCHAR},
        id_card_reverse = #{idCardReverse,jdbcType=VARCHAR},
        status = #{status,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_name = #{createName,jdbcType=VARCHAR},
        update_name = #{updateName,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" >
        update t_platform_authentication_apply
        <set >
            <if test="userId != null" >
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="nickName != null" >
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="account != null" >
                account = #{account,jdbcType=VARCHAR},
            </if>
            <if test="applyTime != null" >
                apply_time = #{applyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="address != null" >
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="heritageType != null" >
                heritage_type = #{heritageType,jdbcType=VARCHAR},
            </if>
            <if test="realName != null" >
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="idCard != null" >
                id_card = #{idCard,jdbcType=VARCHAR},
            </if>
            <if test="idCardImg != null" >
                id_card_img = #{idCardImg,jdbcType=VARCHAR},
            </if>
            <if test="idCardReverse != null" >
                id_card_reverse = #{idCardReverse,jdbcType=VARCHAR},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createName != null" >
                create_name = #{createName,jdbcType=VARCHAR},
            </if>
            <if test="updateName != null" >
                update_name = #{updateName,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateByPrimaryKey" >
        update t_platform_authentication_apply
        set user_id = #{userId,jdbcType=INTEGER},
        nick_name = #{nickName,jdbcType=VARCHAR},
        account = #{account,jdbcType=VARCHAR},
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
        address = #{address,jdbcType=VARCHAR},
        heritage_type = #{heritageType,jdbcType=VARCHAR},
        real_name = #{realName,jdbcType=VARCHAR},
        id_card = #{idCard,jdbcType=VARCHAR},
        id_card_img = #{idCardImg,jdbcType=VARCHAR},
        id_card_reverse = #{idCardReverse,jdbcType=VARCHAR},
        status = #{status,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_name = #{createName,jdbcType=VARCHAR},
        update_name = #{updateName,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=VARCHAR}
        where id = #{id}
    </update>

</mapper>